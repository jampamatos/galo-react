"""Creating tables

Revision ID: 0024803e318b
Revises: 
Create Date: 2025-02-06 18:30:04.256086

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0024803e318b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('leagues',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('logo', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('flag', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stadiums',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('surface', sa.String(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('founded', sa.Integer(), nullable=True),
    sa.Column('logo', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=True),
    sa.Column('birth_place', sa.String(), nullable=True),
    sa.Column('birth_country', sa.String(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('injured', sa.Boolean(), nullable=True),
    sa.Column('photo', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_current', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('round', sa.String(), nullable=True),
    sa.Column('venue_id', sa.Integer(), nullable=True),
    sa.Column('home_team_id', sa.Integer(), nullable=False),
    sa.Column('away_team_id', sa.Integer(), nullable=False),
    sa.Column('home_goals', sa.Integer(), nullable=True),
    sa.Column('away_goals', sa.Integer(), nullable=True),
    sa.Column('halftime_home_goals', sa.Integer(), nullable=True),
    sa.Column('halftime_away_goals', sa.Integer(), nullable=True),
    sa.Column('fulltime_home_goals', sa.Integer(), nullable=True),
    sa.Column('fulltime_away_goals', sa.Integer(), nullable=True),
    sa.Column('extra_time_home_goals', sa.Integer(), nullable=True),
    sa.Column('extra_time_away_goals', sa.Integer(), nullable=True),
    sa.Column('penalty_home_goals', sa.Integer(), nullable=True),
    sa.Column('penalty_away_goals', sa.Integer(), nullable=True),
    sa.Column('referee', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('winner', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['away_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['home_team_id'], ['teams.id'], ),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['venue_id'], ['stadiums.id'], ),
    sa.ForeignKeyConstraint(['winner'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('player_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('appearances', sa.Integer(), nullable=True),
    sa.Column('lineups', sa.Integer(), nullable=True),
    sa.Column('minutes_played', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('captain', sa.Boolean(), nullable=True),
    sa.Column('sub_in', sa.Integer(), nullable=True),
    sa.Column('sub_out', sa.Integer(), nullable=True),
    sa.Column('bench', sa.Integer(), nullable=True),
    sa.Column('shots_total', sa.Integer(), nullable=True),
    sa.Column('shots_on_goal', sa.Integer(), nullable=True),
    sa.Column('goals_total', sa.Integer(), nullable=True),
    sa.Column('assists', sa.Integer(), nullable=True),
    sa.Column('goals_conceded', sa.Integer(), nullable=True),
    sa.Column('goals_saves', sa.Integer(), nullable=True),
    sa.Column('passes_total', sa.Integer(), nullable=True),
    sa.Column('passes_key', sa.Integer(), nullable=True),
    sa.Column('passes_accuracy', sa.String(), nullable=True),
    sa.Column('tackles_total', sa.Integer(), nullable=True),
    sa.Column('tackles_blocks', sa.Integer(), nullable=True),
    sa.Column('tackles_interceptions', sa.Integer(), nullable=True),
    sa.Column('duels_total', sa.Integer(), nullable=True),
    sa.Column('duels_won', sa.Integer(), nullable=True),
    sa.Column('dribbles_attempts', sa.Integer(), nullable=True),
    sa.Column('dribbles_success', sa.Integer(), nullable=True),
    sa.Column('fouls_drawn', sa.Integer(), nullable=True),
    sa.Column('fouls_committed', sa.Integer(), nullable=True),
    sa.Column('yellow_cards', sa.Integer(), nullable=True),
    sa.Column('red_cards', sa.Integer(), nullable=True),
    sa.Column('penalties_won', sa.Integer(), nullable=True),
    sa.Column('penalties_commited', sa.Integer(), nullable=True),
    sa.Column('penalties_scored', sa.Integer(), nullable=True),
    sa.Column('penalties_missed', sa.Integer(), nullable=True),
    sa.Column('penalties_saved', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('standings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('goal_difference', sa.Integer(), nullable=True),
    sa.Column('group_name', sa.String(), nullable=True),
    sa.Column('form', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('draws', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('goals_for', sa.Integer(), nullable=True),
    sa.Column('goals_against', sa.Integer(), nullable=True),
    sa.Column('home_games', sa.Integer(), nullable=True),
    sa.Column('home_wins', sa.Integer(), nullable=True),
    sa.Column('home_draws', sa.Integer(), nullable=True),
    sa.Column('home_losses', sa.Integer(), nullable=True),
    sa.Column('home_goals_for', sa.Integer(), nullable=True),
    sa.Column('home_goals_against', sa.Integer(), nullable=True),
    sa.Column('away_games', sa.Integer(), nullable=True),
    sa.Column('away_wins', sa.Integer(), nullable=True),
    sa.Column('away_draws', sa.Integer(), nullable=True),
    sa.Column('away_losses', sa.Integer(), nullable=True),
    sa.Column('away_goals_for', sa.Integer(), nullable=True),
    sa.Column('away_goals_against', sa.Integer(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('league_id', sa.Integer(), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=False),
    sa.Column('form', sa.String(), nullable=True),
    sa.Column('games_played', sa.Integer(), nullable=True),
    sa.Column('games_home', sa.Integer(), nullable=True),
    sa.Column('games_away', sa.Integer(), nullable=True),
    sa.Column('wins', sa.Integer(), nullable=True),
    sa.Column('wins_home', sa.Integer(), nullable=True),
    sa.Column('wins_away', sa.Integer(), nullable=True),
    sa.Column('draws', sa.Integer(), nullable=True),
    sa.Column('draws_home', sa.Integer(), nullable=True),
    sa.Column('draws_away', sa.Integer(), nullable=True),
    sa.Column('losses', sa.Integer(), nullable=True),
    sa.Column('losses_home', sa.Integer(), nullable=True),
    sa.Column('losses_away', sa.Integer(), nullable=True),
    sa.Column('goals_for', sa.Integer(), nullable=True),
    sa.Column('goals_against', sa.Integer(), nullable=True),
    sa.Column('clean_sheets', sa.Integer(), nullable=True),
    sa.Column('failed_to_score', sa.Integer(), nullable=True),
    sa.Column('biggest_win_home', sa.String(), nullable=True),
    sa.Column('biggest_win_away', sa.String(), nullable=True),
    sa.Column('biggest_loss_home', sa.String(), nullable=True),
    sa.Column('biggest_loss_away', sa.String(), nullable=True),
    sa.Column('penalty_scored', sa.Integer(), nullable=True),
    sa.Column('penalty_missed', sa.Integer(), nullable=True),
    sa.Column('streak_wins', sa.Integer(), nullable=True),
    sa.Column('streak_draws', sa.Integer(), nullable=True),
    sa.Column('streak_losses', sa.Integer(), nullable=True),
    sa.Column('yellow_cards', sa.Integer(), nullable=True),
    sa.Column('red_cards', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['league_id'], ['leagues.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_predictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('predicted_winner', sa.String(), nullable=True),
    sa.Column('win_or_draw', sa.Boolean(), nullable=True),
    sa.Column('under_over', sa.String(), nullable=True),
    sa.Column('goals_home', sa.Integer(), nullable=True),
    sa.Column('goals_away', sa.Integer(), nullable=True),
    sa.Column('advice', sa.String(), nullable=True),
    sa.Column('percent_home', sa.String(), nullable=True),
    sa.Column('percent_draw', sa.String(), nullable=True),
    sa.Column('percent_away', sa.String(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('match_statistics',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('shots_on_goal', sa.Integer(), nullable=True),
    sa.Column('shots_off_goal', sa.Integer(), nullable=True),
    sa.Column('total_shots', sa.Integer(), nullable=True),
    sa.Column('blocked_shots', sa.Integer(), nullable=True),
    sa.Column('shots_inside_box', sa.Integer(), nullable=True),
    sa.Column('shots_outside_box', sa.Integer(), nullable=True),
    sa.Column('fouls', sa.Integer(), nullable=True),
    sa.Column('corner_kicks', sa.Integer(), nullable=True),
    sa.Column('offsides', sa.Integer(), nullable=True),
    sa.Column('ball_possession', sa.String(), nullable=True),
    sa.Column('yellow_cards', sa.Integer(), nullable=True),
    sa.Column('red_cards', sa.Integer(), nullable=True),
    sa.Column('goalkeeper_saves', sa.Integer(), nullable=True),
    sa.Column('total_passes', sa.Integer(), nullable=True),
    sa.Column('passes_accurate', sa.Integer(), nullable=True),
    sa.Column('pass_accuracy', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('match_statistics')
    op.drop_table('match_predictions')
    op.drop_table('team_statistics')
    op.drop_table('standings')
    op.drop_table('player_statistics')
    op.drop_table('matches')
    op.drop_table('seasons')
    op.drop_table('players')
    op.drop_table('teams')
    op.drop_table('stadiums')
    op.drop_table('leagues')
    # ### end Alembic commands ###
